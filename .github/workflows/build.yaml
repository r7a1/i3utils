---
name: Build
on:
  workflow_dispatch:
env:
  DOCKER_CACHE_DIR: /tmp/docker-cache
  DOCKER_CACHE_FILE: snapshot.tar
jobs:
  build:
    runs-on: ubuntu-20.04
    steps:
      - name: Checkout source
        uses: actions/checkout@v2

      - name: Enable cache
        id: buildx-cache
        uses: actions/cache@v2
        with:
          path: /tmp/buildx-cache
          key: ${{ format('cargo-{0}', hashFiles('./.github/actions/cargo/Dockerfile')) }}
          restore-keys: |
            ${{ format('cargo-{0}', hashFiles('./.github/actions/cargo/Dockerfile')) }}
            cargo-

      - name: Ensure docker context exists
        run: docker context create buildx || docker context use buildx
        shell: bash

      - name: Setup buildx
        id: buildx
        uses: docker/setup-buildx-action@v1
        with:
          version: v0.7.0
          endpoint: buildx

      - name: Build dockerfile
        id: docker_build
        uses: docker/build-push-action@v2
        with:
          builder: ${{ steps.buildx.outputs.name }}
          context: ./.github/actions/cargo/Dockerfile
          push: false
          cache-from: type=local,src=/tmp/buildx-cache
          cache-to: type=local,dest=/tmp/buildx-cache

      - name: Enable rust cargo cache
        uses: actions/cache@v2
        with:
          path: |
            /opt/rust/registry
            /opt/rust/sccache
            target
          key: cargo-${{ hashFiles('**/Cargo.lock') }}

      - name: Build and Test
        uses: ./.github/actions/cargo
        with:
          args: test

      - name: Build RPM Package
        uses: ./.github/actions/cargo
        with:
          args: rpm build

      - name: Upload RPM Package
        uses: actions/upload-artifact@v2
        with:
          name: i3utils.rpm
          path: target/release/rpmbuild/RPMS/x86_64/*.rpm
